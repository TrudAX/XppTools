<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DEVCSXppCallStackHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
// VSUH, 25.05.2018, Xpp call stack to infolog (version 23.12.2005)
//https://github.com/TrudAX/XppTools
class DEVCSXppCallStackHandler 
{
    public static UnknownNoYes  isCheckEnabled = UnknownNoYes::Unknown;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Info_onInfoLogMessageAdd</Name>
				<Source><![CDATA[
    [SubscribesTo(classStr(Info), delegateStr(Info, onInfoLogMessageAdd))]
    public static void Info_onInfoLogMessageAdd(InfoLogMessageAddEventArgs _eventArgs)
    {
        DEVCSXppCallStackTable       callStackTable;
        boolean                      isEnabled;
        DEVCSXppCallStackUserSetup   callStackUserSetup;

        SqlDictionary  sqlDict;

        try
        {
            if (DEVCSXppCallStackHandler::isCheckEnabled == UnknownNoYes::Unknown)
            {
                DEVCSXppCallStackHandler::isCheckEnabled = UnknownNoYes::No;

                select firstonly RecId from sqlDict
                    where sqlDict.fieldId  == 0 &&
                            sqlDict.name     == tableStr(DEVCSXppCallStackUserSetup);

                if (sqlDict.recid)
                {
                    DEVCSXppCallStackHandler::isCheckEnabled    = UnknownNoYes::Yes;
                }
            }

            if (DEVCSXppCallStackHandler::isCheckEnabled == UnknownNoYes::Yes)
            {
                callStackUserSetup = DEVCSXppCallStackUserSetup::findCurrent();

                if (callStackUserSetup.RecId && callStackUserSetup.IsEnabled)
                {
                    isEnabled = true;
                    switch (callStackUserSetup.SysInfologLevel)
                    {
                        case SysInfologLevel::None:
                            isEnabled = false;
                            break;
                        case SysInfologLevel::Warning:
                            if (_eventArgs.exception== Exception::Info)
                            {
                                isEnabled = false;
                            }
                            break;
                        case SysInfologLevel::Error:
                            if (_eventArgs.exception == Exception::Info ||
                                _eventArgs.exception == Exception::Warning)
                            {
                                isEnabled = false;
                            }
                            break;
                    }
                }
                else
                {
                    DEVCSXppCallStackHandler::isCheckEnabled = UnknownNoYes::No;
                }
            }

            if (isEnabled)
            {
                UserConnection       userConnection = new UserConnection();
                callStackTable.setConnection(userConnection);
                callStackTable.clear();
                callStackTable.initValue();
                callStackTable.Exception = _eventArgs.exception;
                callStackTable.InfologStr = _eventArgs.message;
                callStackTable.CallStack = xSession::xppCallStack();
                callStackTable.insert();
            }
        }
        catch
        {
            DEVCSXppCallStackHandler::isCheckEnabled = UnknownNoYes::No;
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>