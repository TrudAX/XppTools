<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DEVIntegServiceTest</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DEVIntegServiceTest extends FormRun
{
    DEVIntegTmpFiles       tmpClassMethods;


}
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        //init tmpClassMethods
        DictClass dictClass = new DictClass(className2Id(DEVIntegMessageTypeService.ClassName));
        if (! dictClass)
        {
            return;
        }
        DictMethod dictMethod;

        for (int i = 1; i < dictClass.objectMethodCnt(); i++)
        {
            dictMethod = dictClass.objectMethodObject(i);
            if (dictMethod.returnTypeName() == classStr(DEVIntegServiceExportResponseContract) && dictMethod.parameterCnt() == 1)
            {
                tmpClassMethods.FileName = dictMethod.name();
                tmpClassMethods.ParameterTypeName  = dictMethod.parameterTypeName(1);
                tmpClassMethods.ParameterName      = dictMethod.parameterName(1);
                tmpClassMethods.insert();
            }
        }
        MethodNameStringControl.text(tmpClassMethods.FileName);

    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>GetContractButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ContractStringControl.text("");
            ContractVarText.text("");

            tmpClassMethods.clear();

            select tmpClassMethods
                where tmpClassMethods.FileName == MethodNameStringControl.text();
            if (! tmpClassMethods.RecId)
            {
                return;
            }

            DictClass dictClassContract = new DictClass(className2Id(tmpClassMethods.ParameterTypeName));
            if (dictClassContract)
            {
                Object objContract = dictClassContract.makeObject();

                ContractStringControl.text(DEVIntegServiceExportBase::serialiseXppObject(objContract));
            }

            ContractVarText.text(strFmt('{"%1": %% }', tmpClassMethods.ParameterName));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExecuteContractButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {

            ResultStringControl.text("");

            DictClass dictClass = new DictClass(className2Id(DEVIntegMessageTypeService.ClassName));
            if (! dictClass)
            {
                return;
            }
            DictMethod dictMethod = new DictMethod(UtilElementType::ClassInstanceMethod, dictClass.id(),
                                        MethodNameStringControl.text());

            if (! dictMethod)
            {
                return;
            }
            str testContractName = dictMethod.parameterTypeName(1);
            if (! testContractName || dictMethod.parameterType(1) != Types::Class)
            {
                return;
            }
            DictClass dictClassContract = new DictClass(className2Id(testContractName));
            if (! dictClassContract)
            {
                return;
            }

            Object contractObject = FormJsonSerializer::deserializeObject(dictClassContract.id(), ContractStringControl.text());
            Object mainClass = dictClass.makeObject();
            Object res;

            res = dictClass.callObject(dictMethod.name(), mainClass, contractObject);
            
            if (res)
            {
                ResultStringControl.text(DEVIntegServiceExportBase::serialiseXppObject(res));
            }

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MethodNameStringControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup  = SysTableLookup::newParameters(tablenum(DEVIntegTmpFiles), this);
            Query                   query           = new Query();
            QueryBuildDataSource    qbds;

            ;

            sysTableLookup.addLookupfield(fieldnum(DEVIntegTmpFiles, FileName));
            sysTableLookup.setLabel("Method"); 
            sysTableLookup.addLookupfield(fieldnum(DEVIntegTmpFiles, ParameterTypeName));
            sysTableLookup.setLabel("Contract class"); 

            sysTableLookup.parmTmpBuffer(tmpClassMethods);
            qbds = query.addDataSource(tablenum(DEVIntegTmpFiles));
            sysTableLookup.parmQuery(query);

            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DEVIntegMessageTypeService</Name>
			<Table>DEVIntegMessageTypeService</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ClassName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Enabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MessageTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">Test service class</Caption>
		<DataSource xmlns="">DEVIntegMessageTypeService</DataSource>
		<DialogSize xmlns="">Large</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>FormButtonGroupControl1</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>GetContractButton</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>Show contract</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ExecuteContractButton</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>Execute</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroupControl</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DEVIntegMessageTypeService_MessageTypeId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>MessageTypeId</DataField>
						<DataSource>DEVIntegMessageTypeService</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DEVIntegMessageTypeService_ClassName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ClassName</DataField>
						<DataSource>DEVIntegMessageTypeService</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MethodNameStringControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>Method</Label>
						<LookupButton>Always</LookupButton>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>FormTabControl1</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ContractTabPageControl</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ContractVarText</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>60</DisplayLength>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ContractStringControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MultiLine>Yes</MultiLine>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>Contract</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ResultsTabPageControl</Name>
						<Pattern>FillText</Pattern>
						<PatternVersion>UX7 1.0</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ResultStringControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MultiLine>Yes</MultiLine>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>Result</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>FormButtonGroupControl</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButtonControl</Name>
						<Type>CommandButton</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancellButtonControl</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>