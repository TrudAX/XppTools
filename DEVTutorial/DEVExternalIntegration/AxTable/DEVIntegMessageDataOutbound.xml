<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DEVIntegMessageDataOutbound</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DEVIntegMessageDataOutbound extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static DEVIntegMessageData find(DEVIntegMessageRefRecId  _messageRefRecId,
                                           boolean                  _forUpdate = false)
    {
        DEVIntegMessageData integMessageData;
        ;
        if (_messageRefRecId)
        {
            integMessageData.selectForUpdate(_forUpdate);
            
            select firstonly integMessageData
                where integMessageData.MessageRefRecId  == _messageRefRecId;
        }
        
        return integMessageData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertLog</Name>
				<Source><![CDATA[
    public static void insertLog(DEVIntegExportDocumentLog    _exportDocumentLog,
                                 Exception                    _exception,
                                 DEVIntegMessageProcessResult  _processResults,
                                 int                           _infologStartLine = 0)
    {
        DEVIntegMessageDataOutbound  messageDataOutbound;

        ttsbegin;

        messageDataOutbound.clear();
        messageDataOutbound.Exception      = _exception;

        messageDataOutbound.ExportLogRefRecId = _exportDocumentLog.RecId;

        container taskInfolog = conNull();
        if (_exception != Exception::Info && infologLine() > _infologStartLine)
        {
            taskInfolog = infolog.copy(_infologStartLine + 1, infologLine());
        }
        if (taskInfolog != conNull())
        {
            messageDataOutbound.FileDataStr   = info::infoCon2Str(taskInfolog) + '\n';
        }

        messageDataOutbound.FileDataStr  += _processResults.parmMessageBodyStr();
        messageDataOutbound.insert();

        //errorLog.InfologData    = taskInfolog;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertErrorByMessage</Name>
				<Source><![CDATA[
    public static void insertErrorByMessage(DEVIntegExportDocumentLog    _exportDocumentLog, 
                                            int                          _infoCnt, 
                                            Exception                    _exception, 
                                            DEVIntegMessageProcessResult  _processResults)
    {
        DEVIntegMessageDataOutbound  messageDataOutbound;

        ttsbegin;

        container taskInfolog = conNull();
        if (infologLine() > _infoCnt)
        {
            taskInfolog = infolog.copy(_infoCnt + 1, infologLine());
        }
        messageDataOutbound.clear();
        messageDataOutbound.Exception      = _exception;

        messageDataOutbound.ExportLogRefRecId = _exportDocumentLog.RecId;
        messageDataOutbound.FileDataStr       = strFmt("INFOLOG %1", info::infoCon2Str(taskInfolog));
        messageDataOutbound.insert();

        //errorLog.InfologData    = taskInfolog;
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>Document log message content</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ExportLogRefRecId</TitleField1>
	<TitleField2>createdDateTime</TitleField2>
	<ClusteredIndex>ExportLogIdIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FileData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FileData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DataGroup</Name>
			<Label>Data</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FileData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileDataStr</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>Overview</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExportLogRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Exception</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>FileData</Name>
			<ExtendedDataType>DocuValueFile</ExtendedDataType>
			<Label>Message data</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileDataStr</Name>
			<ExtendedDataType>Notes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExportLogRefRecId</Name>
			<ExtendedDataType>DEVIntegExportDocumentLogRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Exception</Name>
			<Label>Exception</Label>
			<EnumType>Exception</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ExportLogIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExportLogRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DEVIntegExportDocumentLog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DEVIntegExportDocumentLog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExportLogRefRecId</Name>
					<SourceEDT>DEVIntegExportDocumentLogRefRecId</SourceEDT>
					<Field>ExportLogRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>